// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: interface.proto

package proto_interface

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeAccount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	PublicKey     string                 `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeAccount) Reset() {
	*x = NodeAccount{}
	mi := &file_interface_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeAccount) ProtoMessage() {}

func (x *NodeAccount) ProtoReflect() protoreflect.Message {
	mi := &file_interface_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeAccount.ProtoReflect.Descriptor instead.
func (*NodeAccount) Descriptor() ([]byte, []int) {
	return file_interface_proto_rawDescGZIP(), []int{0}
}

func (x *NodeAccount) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeAccount) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

// 예시
type Metrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data1         string                 `protobuf:"bytes,1,opt,name=data1,proto3" json:"data1,omitempty"`
	Data2         string                 `protobuf:"bytes,2,opt,name=data2,proto3" json:"data2,omitempty"`
	Data3         string                 `protobuf:"bytes,3,opt,name=data3,proto3" json:"data3,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metrics) Reset() {
	*x = Metrics{}
	mi := &file_interface_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metrics) ProtoMessage() {}

func (x *Metrics) ProtoReflect() protoreflect.Message {
	mi := &file_interface_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metrics.ProtoReflect.Descriptor instead.
func (*Metrics) Descriptor() ([]byte, []int) {
	return file_interface_proto_rawDescGZIP(), []int{1}
}

func (x *Metrics) GetData1() string {
	if x != nil {
		return x.Data1
	}
	return ""
}

func (x *Metrics) GetData2() string {
	if x != nil {
		return x.Data2
	}
	return ""
}

func (x *Metrics) GetData3() string {
	if x != nil {
		return x.Data3
	}
	return ""
}

// 예시
type CommitteeInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommitteeList []*NodeAccount         `protobuf:"bytes,1,rep,name=committeeList,proto3" json:"committeeList,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitteeInfo) Reset() {
	*x = CommitteeInfo{}
	mi := &file_interface_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitteeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitteeInfo) ProtoMessage() {}

func (x *CommitteeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_interface_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitteeInfo.ProtoReflect.Descriptor instead.
func (*CommitteeInfo) Descriptor() ([]byte, []int) {
	return file_interface_proto_rawDescGZIP(), []int{2}
}

func (x *CommitteeInfo) GetCommitteeList() []*NodeAccount {
	if x != nil {
		return x.CommitteeList
	}
	return nil
}

type Ack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ack) Reset() {
	*x = Ack{}
	mi := &file_interface_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ack) ProtoMessage() {}

func (x *Ack) ProtoReflect() protoreflect.Message {
	mi := &file_interface_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ack.ProtoReflect.Descriptor instead.
func (*Ack) Descriptor() ([]byte, []int) {
	return file_interface_proto_rawDescGZIP(), []int{3}
}

func (x *Ack) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

var File_interface_proto protoreflect.FileDescriptor

const file_interface_proto_rawDesc = "" +
	"\n" +
	"\x0finterface.proto\x12\x04mesh\"E\n" +
	"\vNodeAccount\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1d\n" +
	"\n" +
	"public_key\x18\x02 \x01(\tR\tpublicKey\"K\n" +
	"\aMetrics\x12\x14\n" +
	"\x05data1\x18\x01 \x01(\tR\x05data1\x12\x14\n" +
	"\x05data2\x18\x02 \x01(\tR\x05data2\x12\x14\n" +
	"\x05data3\x18\x03 \x01(\tR\x05data3\"H\n" +
	"\rCommitteeInfo\x127\n" +
	"\rcommitteeList\x18\x01 \x03(\v2\x11.mesh.NodeAccountR\rcommitteeList\"\x15\n" +
	"\x03Ack\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok2\xc6\x01\n" +
	"\x04Mesh\x127\n" +
	"\vJoinNetwork\x12\x11.mesh.NodeAccount\x1a\x13.mesh.CommitteeInfo0\x01\x12)\n" +
	"\aPublish\x12\x13.mesh.CommitteeInfo\x1a\t.mesh.Ack\x12,\n" +
	"\fLeaveNetwork\x12\x11.mesh.NodeAccount\x1a\t.mesh.Ack\x12,\n" +
	"\x10RequestCommittee\x12\r.mesh.Metrics\x1a\t.mesh.AckB\x13Z\x11./proto_interfaceb\x06proto3"

var (
	file_interface_proto_rawDescOnce sync.Once
	file_interface_proto_rawDescData []byte
)

func file_interface_proto_rawDescGZIP() []byte {
	file_interface_proto_rawDescOnce.Do(func() {
		file_interface_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_interface_proto_rawDesc), len(file_interface_proto_rawDesc)))
	})
	return file_interface_proto_rawDescData
}

var file_interface_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_interface_proto_goTypes = []any{
	(*NodeAccount)(nil),   // 0: mesh.NodeAccount
	(*Metrics)(nil),       // 1: mesh.Metrics
	(*CommitteeInfo)(nil), // 2: mesh.CommitteeInfo
	(*Ack)(nil),           // 3: mesh.Ack
}
var file_interface_proto_depIdxs = []int32{
	0, // 0: mesh.CommitteeInfo.committeeList:type_name -> mesh.NodeAccount
	0, // 1: mesh.Mesh.JoinNetwork:input_type -> mesh.NodeAccount
	2, // 2: mesh.Mesh.Publish:input_type -> mesh.CommitteeInfo
	0, // 3: mesh.Mesh.LeaveNetwork:input_type -> mesh.NodeAccount
	1, // 4: mesh.Mesh.RequestCommittee:input_type -> mesh.Metrics
	2, // 5: mesh.Mesh.JoinNetwork:output_type -> mesh.CommitteeInfo
	3, // 6: mesh.Mesh.Publish:output_type -> mesh.Ack
	3, // 7: mesh.Mesh.LeaveNetwork:output_type -> mesh.Ack
	3, // 8: mesh.Mesh.RequestCommittee:output_type -> mesh.Ack
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_interface_proto_init() }
func file_interface_proto_init() {
	if File_interface_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_interface_proto_rawDesc), len(file_interface_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_interface_proto_goTypes,
		DependencyIndexes: file_interface_proto_depIdxs,
		MessageInfos:      file_interface_proto_msgTypes,
	}.Build()
	File_interface_proto = out.File
	file_interface_proto_goTypes = nil
	file_interface_proto_depIdxs = nil
}
